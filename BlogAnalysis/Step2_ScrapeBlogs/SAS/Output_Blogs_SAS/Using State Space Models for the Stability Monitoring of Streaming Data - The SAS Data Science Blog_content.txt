State space models (SSMs) have long been used in a wide variety of fields like econometrics, signal processing, and environmental science.Â  They are used to analyze data generated in a sequential fashion such as time series, panels of time series, and longitudinal data.Â  The CSSM procedure in SASÂ® Econometrics, the SASÂ® ViyaÂ® version of the SSM procedure in SAS/ETSÂ®, provides a comprehensive set of tools for analyzing such sequential (streaming) data. Scoring is an important new feature in the 2021.1.6 release of PROC CSSM. Scoring can be used for efficient, model-based scenario analysis and stability monitoring of an ongoing data stream.Â  This post discusses this new scoring feature.
Scoring is evaluating a previously fitted model at some new predictor setting.Â  For example, a bank might score a new loan application by applying a rule that is based on a previously fitted logistic regression model. Â You might also want to use SSMs for scoring.Â  Because of the sequential nature of the observation process, it is important to realize that the scoring process for an SSM is inherently different from the scoring process for a model that is based on independent observations. Examples would be simple linear regression or logistic regression.
Think of a sequential data process like a long-running TV series, with a new episode every week. Watching the series for some time and learning about the main characters and their relationships to each other is akin to fitting a model to the initial portion of a sequential data stream.Â  After you have watched some episodes, you can make educated guesses about the subsequent plotline. You can also imagine different ways the series could play out, while still being consistent with the storyline.
For sequential data, this process of forecasting and what-if analysis, based on the fitted model and ever-increasing history, is called scoring.Â  Additionally, the scoring process enables you to monitor an ongoing observation process for additive outliers (that is, one-off observations) and structural breaks such as shifts in the mean level or other patterns.
The scoring process requires a model that is a good fit for the initial portion of the data stream.Â Â  After a suitable model is fitted, a score store is created. Â The score store contains sufficient information for you to forecast subsequent observations of the data stream, without having access to its history. If scenario analysis is the only goal, this initially created score store is all that is needed for scoring different future scenarios.Â  On the other hand, if the goal is to perform stability monitoring of the ongoing data stream, the score store must be updated on a continual basis to incorporate the information from the incoming data.Â  The CSSM procedure enables you to easily handle all aspects of such a scoring process.Â  With PROC CSSM you can:
Next, letâ€™s illustrate this SSM-based scoring process with a real-life example.Â  Â The data used in this illustration are set to a monthly frequency and the computing time for scoring is not a constraint.Â  However, SSM-based scoring can be effectively used in applications where the scoring must be done at a much higher frequency, such as every minute or every second.
The traffic accident data analyzed in this example consist of observations on four variables recorded at monthly intervals from January 1969 to December 1985.Â  The variables, all in the log scale, are:
The time series plots below show the F_KSI and R_KSI numbers over the years:

From the time series plots you can see that:
The drop in the mean level of F_KSI is attributed to the enactment of the seat-belt law of February 1983. This law required the front seat passengers to wear seat belts.Â  It didnâ€™t apply to the rear seat passengers.Â  These data have been analyzed by many researchers in the past.
In this section, we will see how you can perform a model-based stability monitoring of the bivariate series (F_KSI, R_KSI).Â  We will use data from January 1969 to December 1981 as the initial portion of the series. This is used for fitting a suitable model and to create the score store.Â  Note that the drop in the mean level of F_KSI, which happened in February 1983, is not part of this initial portion.Â  We hope to detect this drop during the stability monitoring of this series, which begins from January 1982.
Denoting by Yt the bivariate series (F_KSI, R_KSI), and by Xt \(\beta\) the regression effects of logKM and logPrice, the model Yt = Xt \(\beta\) + \(\mu\)t + \(\gamma\)t + \(\epsilon\)t has been shown to be a reasonable model for this initial portion of the series. Here \(\mu\)t denotes the mean level, \(\gamma\)t denotes the monthly seasonal component, and \(\epsilon\)t denotes the noise component (all the terms in the model are bivariate).Â  The data table mycas.train contains the initial portion of the series.Â  The following statements fit this model and create the score store, mycas.inscore:
The score store, mycas.inscore, saves the following information:
With the saved information in the score store, mycas.inscore, the model specification, or the historical data (mycas.train) are no longer needed to perform the stability monitoring of the future observations. Â During the stability monitoring, new observations arrive one at a time.Â  This new observation gets read into a one-row table, mycas.nextObs, which, in turn, gets scored:
This simple scoring step accomplishes two key operations:
After each scoring step, the two score stores (mycas.inscore and mycas.outscore) Â are swapped so the new observation always gets scored using the latest information. See SAS Help Center: Scoring: Monitoring Streaming Data for a complete code illustration of these steps. Â Â In our example, stability monitoring starts in January 1982.Â  The main findings of the monitoring process are as follows:
The following table shows a summary of this monitoring process:
Â 
Clearly, the Z-statistics for both AO and LS are highly significant in all the months between February and July.Â  However, the significance of LS increases steadily whereas the significance of AO decreases steadily.Â  This strongly points to February 1983 being a level shift for F_KSI, rather than a one-off value.
Usually when a structural break, such as a shift in the mean level, is detected, the monitoring is suspended.Â  Before the monitoring can resume, you must update the model to account for the break. Or the cause for the break must be addressed by making appropriate changes to the mechanics of the observation process.Â  In this traffic monitoring case, the monitoring can resume after the model is updated to account for the effect of the seat-belt law.Â  In this example, a break in mean level was detected. You can use both PROC CSSM (and PROC SSM) to detect more general types of breaks.
Streaming data and their monitoring, usually without explicit human intervention, are happening everywhere.Â  SAS Viya provides excellent tools for dealing with such data (for example, SAS Analytics for IoT). The new scoring capability in PROC CSSM (or the underlying CAS actions ssmFit and ssmScore) is designed to neatly fit in such applications.
Rajesh Selukar is a principal research statistician developer in the Econometrics division of SAS R&D.  He has a Ph.D. in statistics from the University of North Carolina at Chapel Hill.  His research interests are in the modeling of time series and longitudinal data.  Over the years he has worked on software development for different aspects of time series analysis.  In particular, he is the author of CSSM, SSM, and UCM procedures in SAS/ETS and SAS/Econometrics.   He is also part of the team that developed SAS Forecast Server.
Cool stuff Rajesh, can't wait to see the %macro STREAM in action! Thank you very much for the interesting blog!  ðŸ™‚

Back to Top
